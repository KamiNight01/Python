#!/usr/bin/env python3

def q1(sentence):
    '''
    Given a string of multiple words separated by single spaces,
    return a new string with the sentence reversed. The words
    themselves should remain as they are. For example, given
    'it is accepted as a masterpiece on strategy', the returned
    string should be 'strategy on masterpiece a as accepted is it'.
    
    return (" ".join(reversed(sentence.split())))
   '''
    wd_list = sentence.split()
    rev_list = reversed(wd_list)
    rev_sent = (" ".join(rev_list))
    return (rev_sent)
def q2(n):
    '''
    Given a positive integer, return its string representation with
    commas seperating groups of 3 digits. For example, given 65535
    the returned string should be '65,535'.
    '''

    return '{:,}'.format(n)

def q3(lst0, lst1):
    '''
    Given two lists of integers, return a sorted list that contains
    all integers from both lists in descending order. For example,
    given [3,4,9] and [8,1,5] the returned list should be [9,8,5,4,3,1].
    The returned list may contain duplicates.
    '''
    return sorted(lst0 + lst1, reverse = True)

def q4(s1,s2,s3):
    '''
    Given 3 scores in the range [0-100] inclusive, return 'GO' if
    the average score is greater than 50. Otherwise return 'NOGO'.
    
    return 'GO' if (s1+s2+s3)/3 >50 else 'NOGO'
    '''


    sums = s1 + s2 +s3
    if int(sums) / 3 >= 50:
        return 'GO'
    else:
        return 'NOGO'
    pass

def q5(integer, limit):
    '''
    Given an integer and limit, return a list of even multiples of the
    integer up to and including the limit. For example, if integer==3 and
    limit==30, the returned list should be [0,6,12,18,24,30]. Note, 0 is
    a multiple of any integer except 0 itself.
    
    return [for i in range(0,limit+1) if (i%integer==0) and (i%2==0)]

    '''
    multiples = []
    for i in range(0,limit+1):
        if (i%integer==0) and (i%2==0):
            multiples.append(i)
    return multiples



def q6(f0, f1):
    '''
    Given two filenames, return a list whose elements consist of line numbers
    for which the two files differ. The first line is considered line 0.
    '''
    diffs = []
    linenum = 0
    with open(f0) as fp0:
        with open(f1) as fp1:
            file0 = fp0.readlines()
            file1 = fp1.readlines()
    for i in file0:
        if i != file1[linenum]:
            diffs.append(linenum)
        linenum += 1
    return diffs



